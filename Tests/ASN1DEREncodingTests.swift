//
//  ASN1DEREncodingTests.swift
//  Tests
//
//  Created by Daniel Egger on 08.02.18.
//
//  ---------------------------------------------------------------------------
//  Copyright 2019 Airside Mobile Inc.
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//  ---------------------------------------------------------------------------
//

@testable import JOSESwift
import XCTest

class ASN1DEREncodingTests: XCTestCase {
    let expectedLongIntTLV: [UInt8] = [
        0x02,
        0x81, 0x81,
        0x00,
        0x8F, 0xE2, 0x41, 0x2A, 0x08, 0xE8, 0x51, 0xA8, 0x8C, 0xB3, 0xE8, 0x53, 0xE7, 0xD5, 0x49, 0x50,
        0xB3, 0x27, 0x8A, 0x2B, 0xCB, 0xEA, 0xB5, 0x42, 0x73, 0xEA, 0x02, 0x57, 0xCC, 0x65, 0x33, 0xEE,
        0x88, 0x20, 0x61, 0xA1, 0x17, 0x56, 0xC1, 0x24, 0x18, 0xE3, 0xA8, 0x08, 0xD3, 0xBE, 0xD9, 0x31,
        0xF3, 0x37, 0x0B, 0x94, 0xB8, 0xCC, 0x43, 0x08, 0x0B, 0x70, 0x24, 0xF7, 0x9C, 0xB1, 0x8D, 0x5D,
        0xD6, 0x6D, 0x82, 0xD0, 0x54, 0x09, 0x84, 0xF8, 0x9F, 0x97, 0x01, 0x75, 0x05, 0x9C, 0x89, 0xD4,
        0xD5, 0xC9, 0x1E, 0xC9, 0x13, 0xD7, 0x2A, 0x6B, 0x30, 0x91, 0x19, 0xD6, 0xD4, 0x42, 0xE0, 0xC4,
        0x9D, 0x7C, 0x92, 0x71, 0xE1, 0xB2, 0x2F, 0x5C, 0x8D, 0xEE, 0xF0, 0xF1, 0x17, 0x1E, 0xD2, 0x5F,
        0x31, 0x5B, 0xB1, 0x9C, 0xBC, 0x20, 0x55, 0xBF, 0x3A, 0x37, 0x42, 0x45, 0x75, 0xDC, 0x90, 0x65,
    ]

    let expectedShortIntTLV: [UInt8] = [
        0x02,
        0x01,
        0x03,
    ]

    let expectedSequenceTLVLongFirst: [UInt8] = [
        0x30,
        0x81, 0x87,

        0x02,
        0x81, 0x81,
        0x00,
        0x8F, 0xE2, 0x41, 0x2A, 0x08, 0xE8, 0x51, 0xA8, 0x8C, 0xB3, 0xE8, 0x53, 0xE7, 0xD5, 0x49, 0x50,
        0xB3, 0x27, 0x8A, 0x2B, 0xCB, 0xEA, 0xB5, 0x42, 0x73, 0xEA, 0x02, 0x57, 0xCC, 0x65, 0x33, 0xEE,
        0x88, 0x20, 0x61, 0xA1, 0x17, 0x56, 0xC1, 0x24, 0x18, 0xE3, 0xA8, 0x08, 0xD3, 0xBE, 0xD9, 0x31,
        0xF3, 0x37, 0x0B, 0x94, 0xB8, 0xCC, 0x43, 0x08, 0x0B, 0x70, 0x24, 0xF7, 0x9C, 0xB1, 0x8D, 0x5D,
        0xD6, 0x6D, 0x82, 0xD0, 0x54, 0x09, 0x84, 0xF8, 0x9F, 0x97, 0x01, 0x75, 0x05, 0x9C, 0x89, 0xD4,
        0xD5, 0xC9, 0x1E, 0xC9, 0x13, 0xD7, 0x2A, 0x6B, 0x30, 0x91, 0x19, 0xD6, 0xD4, 0x42, 0xE0, 0xC4,
        0x9D, 0x7C, 0x92, 0x71, 0xE1, 0xB2, 0x2F, 0x5C, 0x8D, 0xEE, 0xF0, 0xF1, 0x17, 0x1E, 0xD2, 0x5F,
        0x31, 0x5B, 0xB1, 0x9C, 0xBC, 0x20, 0x55, 0xBF, 0x3A, 0x37, 0x42, 0x45, 0x75, 0xDC, 0x90, 0x65,

        0x02,
        0x01,
        0x03,
    ]

    let expectedSequenceTLVShortFirst: [UInt8] = [
        0x30,
        0x81, 0x87,

        0x02,
        0x01,
        0x03,

        0x02,
        0x81, 0x81,
        0x00,
        0x8F, 0xE2, 0x41, 0x2A, 0x08, 0xE8, 0x51, 0xA8, 0x8C, 0xB3, 0xE8, 0x53, 0xE7, 0xD5, 0x49, 0x50,
        0xB3, 0x27, 0x8A, 0x2B, 0xCB, 0xEA, 0xB5, 0x42, 0x73, 0xEA, 0x02, 0x57, 0xCC, 0x65, 0x33, 0xEE,
        0x88, 0x20, 0x61, 0xA1, 0x17, 0x56, 0xC1, 0x24, 0x18, 0xE3, 0xA8, 0x08, 0xD3, 0xBE, 0xD9, 0x31,
        0xF3, 0x37, 0x0B, 0x94, 0xB8, 0xCC, 0x43, 0x08, 0x0B, 0x70, 0x24, 0xF7, 0x9C, 0xB1, 0x8D, 0x5D,
        0xD6, 0x6D, 0x82, 0xD0, 0x54, 0x09, 0x84, 0xF8, 0x9F, 0x97, 0x01, 0x75, 0x05, 0x9C, 0x89, 0xD4,
        0xD5, 0xC9, 0x1E, 0xC9, 0x13, 0xD7, 0x2A, 0x6B, 0x30, 0x91, 0x19, 0xD6, 0xD4, 0x42, 0xE0, 0xC4,
        0x9D, 0x7C, 0x92, 0x71, 0xE1, 0xB2, 0x2F, 0x5C, 0x8D, 0xEE, 0xF0, 0xF1, 0x17, 0x1E, 0xD2, 0x5F,
        0x31, 0x5B, 0xB1, 0x9C, 0xBC, 0x20, 0x55, 0xBF, 0x3A, 0x37, 0x42, 0x45, 0x75, 0xDC, 0x90, 0x65,
    ]

    func testEncodeLongInteger() {
        let value: [UInt8] = [
            0x00,
            0x8F, 0xE2, 0x41, 0x2A, 0x08, 0xE8, 0x51, 0xA8, 0x8C, 0xB3, 0xE8, 0x53, 0xE7, 0xD5, 0x49, 0x50,
            0xB3, 0x27, 0x8A, 0x2B, 0xCB, 0xEA, 0xB5, 0x42, 0x73, 0xEA, 0x02, 0x57, 0xCC, 0x65, 0x33, 0xEE,
            0x88, 0x20, 0x61, 0xA1, 0x17, 0x56, 0xC1, 0x24, 0x18, 0xE3, 0xA8, 0x08, 0xD3, 0xBE, 0xD9, 0x31,
            0xF3, 0x37, 0x0B, 0x94, 0xB8, 0xCC, 0x43, 0x08, 0x0B, 0x70, 0x24, 0xF7, 0x9C, 0xB1, 0x8D, 0x5D,
            0xD6, 0x6D, 0x82, 0xD0, 0x54, 0x09, 0x84, 0xF8, 0x9F, 0x97, 0x01, 0x75, 0x05, 0x9C, 0x89, 0xD4,
            0xD5, 0xC9, 0x1E, 0xC9, 0x13, 0xD7, 0x2A, 0x6B, 0x30, 0x91, 0x19, 0xD6, 0xD4, 0x42, 0xE0, 0xC4,
            0x9D, 0x7C, 0x92, 0x71, 0xE1, 0xB2, 0x2F, 0x5C, 0x8D, 0xEE, 0xF0, 0xF1, 0x17, 0x1E, 0xD2, 0x5F,
            0x31, 0x5B, 0xB1, 0x9C, 0xBC, 0x20, 0x55, 0xBF, 0x3A, 0x37, 0x42, 0x45, 0x75, 0xDC, 0x90, 0x65,
        ]

        let tlv = value.encode(as: .integer)

        XCTAssertEqual(tlv, expectedLongIntTLV)
    }

    func testEncodeShortInteger() {
        let value: [UInt8] = [
            0x03,
        ]

        let tlv = value.encode(as: .integer)

        XCTAssertEqual(tlv, expectedShortIntTLV)
    }

    func testEncodeSequenceLongFirst() {
        let tlv = (expectedLongIntTLV + expectedShortIntTLV).encode(as: .sequence)

        XCTAssertEqual(tlv, expectedSequenceTLVLongFirst)
    }

    func testEncodeSequenceShortFirst() {
        let tlv = (expectedShortIntTLV + expectedLongIntTLV).encode(as: .sequence)

        XCTAssertEqual(tlv, expectedSequenceTLVShortFirst)
    }
}
